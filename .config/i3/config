# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run -i
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
bindsym $mod+Escape focus mode_toggle

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split v

# split in vertical orientation
bindsym $mod+v split h

# enter fullscreen mode for the focused container
bindsym $mod+f exec bash ~/.bash_scripts/fullscreen.sh

# change container layout (stacked, tabbed, split)
bindsym $mod+e layout toggle

# toggle tiling / floating
bindsym $mod+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+a focus mode_toggle

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
set $ws20 "20"


# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+Control+1 workspace number $ws11
bindsym $mod+Control+2 workspace number $ws12
bindsym $mod+Control+3 workspace number $ws13
bindsym $mod+Control+4 workspace number $ws14
bindsym $mod+Control+5 workspace number $ws15
bindsym $mod+Control+6 workspace number $ws16
bindsym $mod+Control+7 workspace number $ws17
bindsym $mod+Control+8 workspace number $ws18
bindsym $mod+Control+9 workspace number $ws19
bindsym $mod+Control+0 workspace number $ws20


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+Control+1 move container to workspace number $ws11
bindsym $mod+Shift+Control+2 move container to workspace number $ws12
bindsym $mod+Shift+Control+3 move container to workspace number $ws13
bindsym $mod+Shift+Control+4 move container to workspace number $ws14
bindsym $mod+Shift+Control+5 move container to workspace number $ws15
bindsym $mod+Shift+Control+6 move container to workspace number $ws16
bindsym $mod+Shift+Control+7 move container to workspace number $ws17
bindsym $mod+Shift+Control+8 move container to workspace number $ws18
bindsym $mod+Shift+Control+9 move container to workspace number $ws19
bindsym $mod+Shift+Control+0 move container to workspace number $ws20

bindsym $mod+Shift+o exec bash ~/.bash_scripts/workspace_to_monitor.sh

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal
        bindsym 1 mode "default"
        bindsym 2 mode "default"
        bindsym 3 mode "default"
        bindsym 4 mode "default"
        bindsym 5 mode "default"
        bindsym 6 mode "default"
        bindsym 7 mode "default"
        bindsym 8 mode "default"
        bindsym 9 mode "default"
        bindsym a mode "default"
        bindsym b mode "default"
        bindsym c mode "default"
        bindsym d mode "default"
        bindsym e mode "default"
        bindsym f mode "default"
        bindsym g mode "default"
        bindsym h mode "default"
        bindsym i mode "default"
        bindsym j mode "default"
        bindsym k mode "default"
        bindsym l mode "default"
        bindsym m mode "default"
        bindsym n mode "default"
        bindsym o mode "default"
        bindsym p mode "default"
        bindsym q mode "default"
        bindsym r mode "default"
        bindsym s mode "default"
        bindsym t mode "default"
        bindsym u mode "default"
        bindsym v mode "default"
        bindsym w mode "default"
        bindsym x mode "default"
        bindsym y mode "default"
        bindsym z mode "default"
        bindsym Shift mode "default"
        bindsym Control mode "default"
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}

#set default border
default_border pixel 2
default_floating_border pixel 2

#tap to click touchpad & set sens
exec_always xinput set-prop "Apple Inc. Magic Trackpad 2" "libinput Tapping Enabled" 1
exec_always xinput set-prop "Apple Inc. Magic Trackpad 2" "Coordinate Transformation Matrix" 1.2, 0.0, 0.0, 0.0, 1.2, 0.0, 0.0, 0.0, 1.0
exec_always xinput set-prop "pointer:MOSART Semi. 2.4G Keyboard Mouse" "Coordinate Transformation Matrix" 0.5, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 1.0

#start up processes
exec libinput-gestures-setup start
exec google-chrome --app=https://whiteboard.office.com/
exec google-chrome --app=https://chat.openai.com/
exec blueman-manager
exec google-chrome --app=https://www.audible.com/library/
exec google-chrome --app=https://open.spotify.com/
exec google-chrome --app=https://calendar.google.com/calendar/u/2/r/month/2024/2/1?pli=1
exec google-chrome --app=https://mail.google.com/mail/u/0/#inbox 
exec google-chrome -app=https://drive.google.com/drive/u/0/my-drive
exec gromit-mpx
exec redshift-gtk
exec '/opt/Mullvad VPN/mullvad-vpn' %U
exec flatpak run me.timschneeberger.GalaxyBudsClient
exec bash ~/.bash_scripts/battery_warning.sh
exec CM_SELECTIONS=clipboard clipmenud

# restart audio stack & i3
bindsym $mod+Shift+XF86AudioPlay restart; exec systemctl --user restart wireplumber pipewire pipewire-pulse

#brightness keys using brightnessctl
bindsym XF86MonBrightnessUp exec sudo brightnessctl set +5%
bindsym XF86MonBrightnessDown exec sudo brightnessctl set 5%-

#volume keys using pactl bash script
bindsym XF86AudioRaiseVolume exec bash ~/.bash_scripts/pactl_volume.sh +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec bash ~/.bash_scripts/pactl_volume.sh -5% && $refresh_i3status
bindsym XF86AudioMute exec bash ~/.bash_scripts/pactl_volume.sh M && $refresh_i3status

#play-pause-next-previous buttons
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

#start custom dmenu
bindsym $mod+Shift+d exec bash ~/.bash_scripts/dmenu_custom.sh

#grab window dmenu
bindsym $mod+Shift+m exec bash ~/.bash_scripts/cycle_move_window.sh 20
bindsym $mod+m move container to workspace number $ws20

#always apps open in floating mode
for_window [class="feh" instance="feh"] floating enable
for_window [class="xpad" instance="xpad"] floating enable

#prev next workspace using f17 & f18
bindcode $mod+195 workspace prev
bindcode $mod+196 workspace next
bindcode $mod+Shift+195 move workspace prev; workspace prev
bindcode $mod+Shift+196 move workspace next; workspace next

#printscreen
bindsym Print exec gnome-screenshot -i

#open file explorer
bindsym $mod+s exec nemo

#open google
bindsym $mod+g exec google-chrome

# start a terminal
bindsym $mod+t exec i3-sensible-terminal
bindsym $mod+Shift+t exec ~/.bash_scripts/tmux-sessionizer.sh

#open dmenu window jumper
bindsym $mod+j exec bash ~/.bash_scripts/dmenu-i3-window-jumper.sh

#open clipboard manager
bindsym $mod+c exec clipmenu -i

#open/close xpad -- rework these binds and scripts so that $mod+Shift+Fkey just opens that project?
bindsym $mod+Shift+x exec bash ~/.bash_scripts/open_xpad.sh
#switch xpad project
bindsym $mod+Shift+F1 exec bash ~/.bash_scripts/switch_xpad_project.sh 1
bindsym $mod+Shift+F2 exec bash ~/.bash_scripts/switch_xpad_project.sh 2
bindsym $mod+Shift+F3 exec bash ~/.bash_scripts/switch_xpad_project.sh 3
bindsym $mod+Shift+F4 exec bash ~/.bash_scripts/switch_xpad_project.sh 4
bindsym $mod+Shift+F5 exec bash ~/.bash_scripts/switch_xpad_project.sh 5
bindsym $mod+Shift+F6 exec bash ~/.bash_scripts/switch_xpad_project.sh 6
bindsym $mod+Shift+F7 exec bash ~/.bash_scripts/switch_xpad_project.sh 7
